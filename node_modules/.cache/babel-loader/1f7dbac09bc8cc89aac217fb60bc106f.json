{"ast":null,"code":"import _regeneratorRuntime from \"D:\\\\\\u041E\\u0431\\u0440\\u0430\\u0437\\u043E\\u0432\\u0430\\u043D\\u0438\\u0435\\\\\\u0412\\u043A\\u0430\\u0442 \\u0432 IT\\\\\\u0422\\u0435\\u0441\\u0442\\u043E\\u0432\\u044B\\u0435\\\\RosumSystems\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"D:\\\\\\u041E\\u0431\\u0440\\u0430\\u0437\\u043E\\u0432\\u0430\\u043D\\u0438\\u0435\\\\\\u0412\\u043A\\u0430\\u0442 \\u0432 IT\\\\\\u0422\\u0435\\u0441\\u0442\\u043E\\u0432\\u044B\\u0435\\\\RosumSystems\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _objectSpread from \"D:\\\\\\u041E\\u0431\\u0440\\u0430\\u0437\\u043E\\u0432\\u0430\\u043D\\u0438\\u0435\\\\\\u0412\\u043A\\u0430\\u0442 \\u0432 IT\\\\\\u0422\\u0435\\u0441\\u0442\\u043E\\u0432\\u044B\\u0435\\\\RosumSystems\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport { configureStore } from \"@reduxjs/toolkit\";\nimport { getEmployees } from \"../api\";\nvar INITIALIZE = \"INITIALIZE\";\nvar state = {};\n\nvar employeeReducer = function employeeReducer(action) {\n  switch (action.type) {\n    case INITIALIZE:\n      return _objectSpread({}, state, {\n        employees: action.payload\n      });\n      break;\n\n    default:\n      return state;\n  }\n\n  return state;\n};\n\nexport default employeeReducer;\nexport var initializeState = function initializeState(payload) {\n  return {\n    type: INITIALIZE,\n    payload: payload\n  };\n};\nexport var getData = function getData() {\n  return /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(dispatch) {\n      var response;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              debugger;\n              _context.next = 3;\n              return getEmployees();\n\n            case 3:\n              response = _context.sent;\n              console.log(response);\n              dispatch(initializeState(response));\n\n            case 6:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function (_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n};","map":{"version":3,"sources":["D:/Образование/Вкат в IT/Тестовые/RosumSystems/src/redux/reducerE.js"],"names":["configureStore","getEmployees","INITIALIZE","state","employeeReducer","action","type","employees","payload","initializeState","getData","dispatch","response","console","log"],"mappings":";;;AAAA,SAAQA,cAAR,QAA6B,kBAA7B;AACA,SAAQC,YAAR,QAA2B,QAA3B;AAEA,IAAMC,UAAU,GAAG,YAAnB;AAEA,IAAIC,KAAK,GAAG,EAAZ;;AAEA,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAACC,MAAD,EAAY;AAChC,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKJ,UAAL;AACI,+BACOC,KADP;AAEGI,QAAAA,SAAS,EAAEF,MAAM,CAACG;AAFrB;AAIA;;AACJ;AACI,aAAOL,KAAP;AARR;;AAUA,SAAOA,KAAP;AACH,CAZD;;AAeA,eAAeC,eAAf;AAEA,OAAO,IAAMK,eAAe,GAAG,SAAlBA,eAAkB,CAACD,OAAD;AAAA,SAAc;AAACF,IAAAA,IAAI,EAAEJ,UAAP;AAAmBM,IAAAA,OAAO,EAAPA;AAAnB,GAAd;AAAA,CAAxB;AAEP,OAAO,IAAME,OAAO,GAAG,SAAVA,OAAU,GAAM;AACzB;AAAA,wEAAO,iBAAOC,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AACH;AADG;AAAA,qBAEoBV,YAAY,EAFhC;;AAAA;AAEGW,cAAAA,QAFH;AAGHC,cAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ;AACAD,cAAAA,QAAQ,CAACF,eAAe,CAACG,QAAD,CAAhB,CAAR;;AAJG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAP;;AAAA;AAAA;AAAA;AAAA;AAMH,CAPM","sourcesContent":["import {configureStore} from \"@reduxjs/toolkit\";\r\nimport {getEmployees} from \"../api\";\r\n\r\nconst INITIALIZE = \"INITIALIZE\";\r\n\r\nlet state = {};\r\n\r\nconst employeeReducer = (action) => {\r\n    switch (action.type) {\r\n        case INITIALIZE:\r\n            return {\r\n                ...state,\r\n               employees: action.payload\r\n            }\r\n            break;\r\n        default:\r\n            return state;\r\n    }\r\n    return state;\r\n}\r\n\r\n\r\nexport default employeeReducer;\r\n\r\nexport const initializeState = (payload) => ({type: INITIALIZE, payload});\r\n\r\nexport const getData = () => {\r\n    return async (dispatch) => {\r\n        debugger;\r\n        const response = await getEmployees();\r\n        console.log(response);\r\n        dispatch(initializeState(response));\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}