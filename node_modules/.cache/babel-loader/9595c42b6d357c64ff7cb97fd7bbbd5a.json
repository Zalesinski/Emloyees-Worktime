{"ast":null,"code":"import _regeneratorRuntime from \"D:\\\\\\u041E\\u0431\\u0440\\u0430\\u0437\\u043E\\u0432\\u0430\\u043D\\u0438\\u0435\\\\\\u0412\\u043A\\u0430\\u0442 \\u0432 IT\\\\\\u0422\\u0435\\u0441\\u0442\\u043E\\u0432\\u044B\\u0435\\\\RosumSystems\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"D:\\\\\\u041E\\u0431\\u0440\\u0430\\u0437\\u043E\\u0432\\u0430\\u043D\\u0438\\u0435\\\\\\u0412\\u043A\\u0430\\u0442 \\u0432 IT\\\\\\u0422\\u0435\\u0441\\u0442\\u043E\\u0432\\u044B\\u0435\\\\RosumSystems\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _objectSpread from \"D:\\\\\\u041E\\u0431\\u0440\\u0430\\u0437\\u043E\\u0432\\u0430\\u043D\\u0438\\u0435\\\\\\u0412\\u043A\\u0430\\u0442 \\u0432 IT\\\\\\u0422\\u0435\\u0441\\u0442\\u043E\\u0432\\u044B\\u0435\\\\RosumSystems\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nvar SET_EMPLOYEES = \"SET_EMPLOYEES\";\nvar initialState = {\n  employees: []\n};\n\nvar employeesReducer = function employeesReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case SET_EMPLOYEES:\n      return _objectSpread({}, state, {\n        users: action.users\n      });\n      break;\n\n    default:\n      return state;\n  }\n\n  return state;\n};\n\nexport default employeesReducer;\n\nvar setEmployees = function setEmployees(employees) {\n  return {\n    type: SET_EMPLOYEES,\n    employees: employees\n  };\n};\n\nvar getEmployees = function getEmployees() {\n  return /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(dispatch) {\n      var data;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return getEmployees();\n\n            case 2:\n              data = _context.sent;\n              dispatch(setEmployees(data));\n\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function (_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n};","map":{"version":3,"sources":["D:/Образование/Вкат в IT/Тестовые/RosumSystems/src/redux/reducerE.js"],"names":["SET_EMPLOYEES","initialState","employees","employeesReducer","state","action","type","users","setEmployees","getEmployees","dispatch","data"],"mappings":";;;AAAA,IAAMA,aAAa,GAAG,eAAtB;AAEA,IAAIC,YAAY,GAAG;AACfC,EAAAA,SAAS,EAAE;AADI,CAAnB;;AAIA,IAAMC,gBAAgB,GAAG,SAAnBA,gBAAmB,GAAkC;AAAA,MAAjCC,KAAiC,uEAAzBH,YAAyB;AAAA,MAAXI,MAAW;;AACvD,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKN,aAAL;AACI,+BACOI,KADP;AAEIG,QAAAA,KAAK,EAAEF,MAAM,CAACE;AAFlB;AAIA;;AACJ;AACI,aAAOH,KAAP;AARR;;AAUA,SAAOA,KAAP;AACH,CAZD;;AAcA,eAAeD,gBAAf;;AAEA,IAAMK,YAAY,GAAG,SAAfA,YAAe,CAACN,SAAD;AAAA,SAAgB;AAACI,IAAAA,IAAI,EAAEN,aAAP;AAAsBE,IAAAA,SAAS,EAATA;AAAtB,GAAhB;AAAA,CAArB;;AAEA,IAAMO,YAAY,GAAG,SAAfA,YAAe,GAAM;AACvB;AAAA,wEAAO,iBAAMC,QAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACcD,YAAY,EAD1B;;AAAA;AACCE,cAAAA,IADD;AAEHD,cAAAA,QAAQ,CAACF,YAAY,CAACG,IAAD,CAAb,CAAR;;AAFG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAP;;AAAA;AAAA;AAAA;AAAA;AAIH,CALD","sourcesContent":["const SET_EMPLOYEES = \"SET_EMPLOYEES\"\r\n\r\nlet initialState = {\r\n    employees: [],\r\n}\r\n\r\nconst employeesReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_EMPLOYEES:\r\n            return {\r\n                ...state,\r\n                users: action.users\r\n            }\r\n            break;\r\n        default:\r\n            return state;\r\n    }\r\n    return state;\r\n}\r\n\r\nexport default employeesReducer;\r\n\r\nconst setEmployees = (employees) => ({type: SET_EMPLOYEES, employees});\r\n\r\nconst getEmployees = () => {\r\n    return async dispatch => {\r\n        let data = await getEmployees();\r\n        dispatch(setEmployees(data));\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}